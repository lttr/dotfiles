" Documentation: https://github.com/JetBrains/ideavim 

" vim: set ft=vim:

" Settings
" ========

set hlsearch
set ignorecase
set incsearch

set smartindent
set autoindent
set smartcase
set nolist
set number
set autochdir
set scrolloff=1
set noexpandtab
set tabstop=4
set shiftwidth=4
" set clipboard=unnamed
" set softtabstop=0

" Hotkeys 
" =======

" ===== Bubble lines up and down =====
" tip from http://vimrcfu.com/snippet/110
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
" without `` at the end of mapping
vnoremap <A-k> :m '<-2<CR>gv=gv

" ===== Change indentation =====
nnoremap <A-h> <<
nnoremap <A-l> >>
vnoremap <A-h> <gv
vnoremap <A-l> >gv
" Maintain Visual Mode after shifting > and <
vnoremap < <gv
vnoremap > >gv

" ===== Consistency =====
" Make the behaviour of Y consistent with D and C 
" (do the action from here to the end of line)
nnoremap Y y$

" ===== Cut, Copy and Paste =====
" copy selection
vnoremap <C-c> "+y
" copy whole document
nnoremap <C-c>a m`ggVG"*y``
" copy row
nnoremap <C-S-c> "+yy
nnoremap <C-c>r "+yy
" copy word
nnoremap <C-c>w m`viw"+y``
" copy WORD
nnoremap <C-c>W m`viW"+y``
" paste
nnoremap <C-v> "+p
" paste from insert mode
inoremap <C-v> <Esc>"+p
" paste over in visual mode
vnoremap <C-v> d"+gP
" Replace selection with yanked or deleted text
" TODO Does not work correctly at the end of a line
vnoremap s "_dgP
" Don't copy the contents of an overwritten selection
vnoremap p "_dgP

" ===== Exiting =====
" Quit window
nnoremap ,q :q<cr>

" ===== Headings =====
" Make commented heading from current line, using Commentary plugin (no 'noremap')
nmap <space>+ O<esc>78i=<esc>gccjo<esc>78i=<esc>gcckgcc0a<space><esc>
" Make commented subheading from current line, using Commentary plugin (no 'noremap')
nmap <space>= I<space><esc>A<space><esc>05i=<esc>$5a=<esc>gcc

" ===== Moving in buffer =====
" More convenient keys for start and end of line
nnoremap H 0
nnoremap L $

" ===== Programming shortcuts =====
nnoremap <space>; m`A;<esc>``

" ===== Searching =====
" Visual search and Save search for later n. usage = multiple renaming
" Even more powerful with cgn = change next occurance, than 
nnoremap gr viwy/<C-r>"<CR><C-o>:set hlsearch<CR>
vnoremap gr y/<C-r>"<CR><C-o>:set hlsearch<CR>
" Display all lines with keyword under cursor and ask which one to jump to
nnoremap gss [I:let nr = input("Which one: ")<Bar>exe "normal " . nr ."[\t"<CR>
" Selects the text that was entered during the last insert mode usage
nnoremap gV `[v`]
" Go Substitute
nnoremap gs :%s//g<Left><Left>
 
" ===== Strings =====
" Surround current word
nnoremap <space>" m`viw<esc>a"<esc>hbi"<esc>lel``
nnoremap <space>' m`viw<esc>a'<esc>hbi'<esc>lel``

" ===== Unimpaired functionality =====
" next and previous buffers (tabs)
nnoremap ]b :bn<CR>
nnoremap [b :bp<CR>
" add lines before and after current line
nnoremap ]<space> m`o<Esc>``
nnoremap [<space> m`O<Esc>``

nnoremap coc :set<space>cursorline!<CR>
nnoremap coh :set<space>hlsearch!<CR>
nnoremap col :set<space>list!<CR>
nnoremap con :set<space>number!<CR>
nnoremap cor :set<space>relativenumber!<CR>


